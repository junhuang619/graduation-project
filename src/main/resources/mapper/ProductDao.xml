<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jh.xysp.dao.ProductDao">

	<resultMap id="productMap" type="com.jh.xysp.entity.Product">
		<id column="product_id" property="productId" />
		<!-- property对应实体类中的属性名 column 对应库表中的字段名 -->
		<result column="product_name" property="productName" />
		<result column="product_desc" property="productDesc" />
		<result column="img_addr" property="imgAddr" />
		<result column="normal_price" property="normalPrice" />
		<result column="promotion_price" property="promotionPrice" />
		<result column="product_priority" property="priority" />
		<result column="product_create_time" property="createTime" />
		<result column="product_last_edit_time" property="lastEditTime" />
		<result column="product_enable_status" property="enableStatus" />

		<!-- 一对一使用association product中的属性为productCategory， 通过数据库中的product_category_id关联起来的 
			类型为 com.artisan.o2o.entity.ProductCategory -->
		<association property="productCategory"
			column="product_category_id"
			javaType="com.jh.xysp.entity.ProductCategory">
			<!-- 对应ProductCategory中的属性 和 tb_product_category的字段 -->
			<id column="product_category_id" property="productCategoryId" />
			<result column="product_category_name"
				property="productCategoryName" />
		</association>

		<!-- 一对一使用association product中的属性为shop， 通过数据库中的shop_id关联起来的 类型为com.artisan.o2o.entity.Shop -->
		<association property="shop" column="shop_id"
			javaType="com.jh.xysp.entity.Shop">
			<id column="shop_id" property="shopId" />
			<!-- 对应Shop中的属性 和 tb_shop的字段 ,如果是符合对象，使用xx.xxx的方式 -->
			<result column="shop_owner_id" property="shopowner.userId" />
			<result column="shop_name" property="shopName" />
		</association>
		<!-- 一对多使用collection product中的属性为productImgList，并且是通过库表中的product_id关联起来的， 
			保存的类型为com.imooc.myo2o.entity.ProductImg -->
		<collection property="productImgList" column="product_id"
			ofType="com.jh.xysp.entity.ProductImg">
			<id column="product_img_id" property="productImgId" />
			<result column="img_addr" property="imgAddr" />
			<result column="img_desc" property="imgDesc" />
			<result column="img_priority" property="imgpriority" />
			<result column="product_id" property="productId" />
			<result column="product_create_time" property="imgCreateTime" />
		</collection>
	</resultMap>

	<insert id="insertProduct"
		parameterType="com.jh.xysp.entity.Product" useGeneratedKeys="true"
		keyProperty="productId" keyColumn="product_id">
		insert into
		jh_product
		(
		product_name,
		product_desc,
		img_addr,
		normal_price,
		promotion_price,
		product_priority,
		product_create_time,
		product_last_edit_time,
		product_enable_status,
		product_category_id,
		shop_id
		)
		values(
		#{productName},
		#{productDesc},
		#{imgAddr},
		#{normalPrice},
		#{promotionPrice},
		#{priority},
		#{createTime},
		#{lastEditTime},
		#{enableStatus},
		#{productCategory.productCategoryId},
		#{shop.shopId}
		)
	</insert>
	<select id="selectProductById" resultMap="productMap"
		parameterType="Long">
		<!-- 具体的sql -->
		SELECT
		p.product_id,
		p.product_name,
		p.product_desc,
		p.img_addr,
		p.normal_price,
		p.promotion_price,
		p.product_priority,
		p.product_create_time,
		p.product_last_edit_time,
		p.product_enable_status,
		p.product_category_id,
		p.shop_id,
		pm.product_img_id,
		pm.img_addr,
		pm.img_desc,
		pm.img_priority,
		pm.product_create_time
		FROM
		jh_product p
		<!-- 左连接LEFT JOIN，（即使该商品没有商品详情图片，也要查询出来该商铺） -->
		LEFT JOIN
		jh_product_img pm
		ON
		p.product_id =pm.product_id
		WHERE
		p.product_id = #{productId}
		ORDER BY
		pm.img_priority DESC
	</select>

	<update id="updateProduct"
		parameterType="com.jh.xysp.entity.Product">
		UPDATE
		jh_product
		<set>
			<!-- 注意后面的逗号 -->
			<if test="productName !=null ">product_name = #{productName},</if>
			<if test="productDesc !=null ">product_desc = #{productDesc},</if>
			<if test="imgAddr !=null ">img_addr = #{imgAddr},</if>
			<if test="normalPrice != null ">normal_price = #{normalPrice},</if>
			<if test="promotionPrice != null ">promotion_price = #{promotionPrice},</if>
			<if test="priority != null">product_priority = #{priority},</if>
			<if test="createTime != null">product_create_time = #{createTime},</if>
			<if test="lastEditTime != null">product_last_edit_time = #{lastEditTime},</if>
			<if test="enableStatus != null ">product_enable_status = #{enableStatus},</if>
			<!-- 注意如果是引用的复杂对象的写法 -->
			<if
				test="productCategory != null and productCategory.productCategoryId != null ">product_category_id = #{productCategory.productCategoryId},
			</if>
		</set>
		WHERE
		product_id = #{productId}
		AND
		shop_id=#{shop.shopId}
	</update>


	<sql id="selectProductByCondition">
		<!-- 根据shopId 查询 -->
		<if
			test="productCondition.shop != null and  productCondition.shop.shopId != null ">
			and shop_id = #{productCondition.shop.shopId}
		</if>
		<!-- 根据product_category_id 查询 -->
		<if
			test="productCondition.productCategory != null and productCondition.productCategory.productCategoryId != null">
			and product_category_id =
			#{productCondition.productCategory.productCategoryId}
		</if>
		<!-- 根据enable_status 查询 -->
		<if test="productCondition.enableStatus != null">
			and product_enable_status = #{productCondition.enableStatus}
		</if>
		<!-- 根据product_name 模糊查询 -->
		<if test="productCondition.productName != null">
			and product_name like '%${productCondition.productName}%'
		</if>
	</sql>


	<select id="selectProductList"
		resultType="com.jh.xysp.entity.Product">
		SELECT
		product_id,
		product_name,
		product_desc,
		img_addr,
		normal_price,
		promotion_price,
		product_priority,
		product_create_time,
		product_last_edit_time,
		product_enable_status,
		product_category_id,
		shop_id
		FROM
		jh_product
		<where>
			<include refid="selectProductByCondition"></include>
		</where>
		ORDER BY
		product_priority desc
		LIMIT #{rowIndex} ,#{pageSize}
	</select>


	<select id="selectCountProduct" resultType="Integer">
		SELECT
		count(1)
		FROM
		jh_product
		<where>
			<include refid="selectProductByCondition"></include>
		</where>
	</select>
	
	    <update id="updateProductCategoryToNull">
        UPDATE 
            jh_product
        SET 
            product_category_id = null
        WHERE 
            product_category_id = #{productCategoryId}
        AND 
            shop_id = #{shopId}
    </update>
</mapper>